/* Copyright (c) 2004-2011 Sven van der Meer
 * All rights reserved.
 *
 * Redistribution  and  use  in  source  and  binary  forms,  with  or  without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     + Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     + Redistributions  in binary  form must  reproduce the  above copyright
 *       notice, this list  of conditions and  the following disclaimer  in the
 *       documentation and/or other materials provided with the distribution.
 *     + Neither the name of the the author nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  IS"
 * AND ANY EXPRESS  OR IMPLIED WARRANTIES,  INCLUDING, BUT NOT  LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY  AND FITNESS FOR A  PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN  NO EVENT SHALL  THE COPYRIGHT HOLDER  OR CONTRIBUTORS BE
 * LIABLE  FOR  ANY  DIRECT,  INDIRECT,  INCIDENTAL,  SPECIAL,  EXEMPLARY,   OR
 * CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT  LIMITED  TO,  PROCUREMENT  OF
 * SUBSTITUTE GOODS  OR SERVICES;  LOSS OF  USE, DATA,  OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER  CAUSED AND  ON ANY  THEORY OF  LIABILITY, WHETHER  IN
 * CONTRACT,  STRICT LIABILITY,  OR TORT  (INCLUDING NEGLIGENCE  OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE  USE OF THIS SOFTWARE, EVEN IF ADVISED  OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Template file for Cola.Proto language rules in Org.SKB.Lang.Cola.Proto
 *
 * @package    org.skb.lang.cola.proto
 * @author     Sven van der Meer <sven@vandermeer.de>
 * @copyright  2011-2011 Sven van der Meer
 * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
 * @version    v1.0.0 build 110901 (01-Sep-11) for StringTemplate v3.2.0
 */

group rules;

property12(do_error, do_descr, ident, base_type, const_type) ::= <<
<if(do_error)>
type mismatch for property declaration \<<ident>\>
       ==\> type declared is \<<base_type>\>, value associated is of type \<<const_type>\>
<endif>
<if(do_descr)>
  Property Rule 12: ##add explanation##
<endif>
>>

property13(do_error, do_descr, ident, base_type, const_type) ::= <<
<if(do_error)>
potential type mismatch for property declaration \<<ident>\>
       ==\> type declared is \<<base_type>\>, value associated is of type \<<const_type>\>
<endif>
<if(do_descr)>
  Property Rule 13: ##add explanation##
<endif>
>>

property14(do_error, do_descr, scope, ident) ::= <<
<if(do_error)>
scope for atom \<<scope>\> redefined in property \<<ident>\>
<endif>
<if(do_descr)>
  Property Rule 14: ##add explanation##
<endif>
>>

contract05(do_error, do_descr, scope, ident) ::= <<
<if(do_error)>
scope for atom \<<scope>\> redefined in contract \<<ident>\>
<endif>
<if(do_descr)>
  Contract Rule 05: ##add explanation##
<endif>
>>

identifier01(do_error, do_descr, ident, category, categoryOrig, fileOrig, lineOrig, colOrig) ::= <<
<if(do_error)>
identifier used more than once
       ==\> identifier \<<ident>\> as \<<category>\>, previously defined as \<<categoryOrig>\> in file <fileOrig>:<lineOrig>:<colOrig>  
<endif>
<if(do_descr)>
  Identifier Rule 01: ##add explanation##
<endif>
>>
