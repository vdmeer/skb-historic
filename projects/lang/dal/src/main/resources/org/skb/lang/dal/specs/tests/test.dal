/* Copyright (c) 2011-2011 Sven van der Meer
 * All rights reserved.
 *
 * Redistribution  and  use  in  source  and  binary  forms,  with  or  without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     + Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     + Redistributions  in binary  form must  reproduce the  above copyright
 *       notice, this list  of conditions and  the following disclaimer  in the
 *       documentation and/or other materials provided with the distribution.
 *     + Neither the name of the the author nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  IS"
 * AND ANY EXPRESS  OR IMPLIED WARRANTIES,  INCLUDING, BUT NOT  LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY  AND FITNESS FOR A  PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN  NO EVENT SHALL  THE COPYRIGHT HOLDER  OR CONTRIBUTORS BE
 * LIABLE  FOR  ANY  DIRECT,  INDIRECT,  INCIDENTAL,  SPECIAL,  EXEMPLARY,   OR
 * CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT  LIMITED  TO,  PROCUREMENT  OF
 * SUBSTITUTE GOODS  OR SERVICES;  LOSS OF  USE, DATA,  OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER  CAUSED AND  ON ANY  THEORY OF  LIABILITY, WHETHER  IN
 * CONTRACT,  STRICT LIABILITY,  OR TORT  (INCLUDING NEGLIGENCE  OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE  USE OF THIS SOFTWARE, EVEN IF ADVISED  OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Database and Repository specification for Org.SKB.Lang.Acronyms
 *
 * @package    org.skb.lang.acronyms
 * @author     Sven van der Meer <sven@vandermeer.de>
 * @copyright  2011-2011 Sven van der Meer
 * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
 * @version    v0.01 build 110309 (09-Mar-11) for DAL v0.01
 */


dal:repository core{
    dal:table pkg_fields{
        dal:repository:element core:fields.key string
        dal:repository:element core:fields.type string (list "core" "request")
        dal:repository:element core:fields.use string (list "entity" "value")
        dal:repository:element core:fields.entries_name string
        dal:repository:element core:fields.http_req_name string
        dal:repository:element core:fields.default_table string
        dal:repository:element core:fields.explode string (or "0" "1")
        dal:repository:element core:fields.interpreter string
        dal:repository:element core:fields.val_unset string
        dal:repository:element core:fields.isval string
        dal:repository:element core:fields.isval_if string
        dal:repository:element core:fields.isval_else string
        dal:repository:element core:fields.val_do_list string
        dal:repository:element core:fields.description string
        dal:repository:element core:fields.day.start string
        dal:repository:element core:fields.day.end string
        dal:repository:element core:fields.month.start string
        dal:repository:element core:fields.month.end string
        dal:repository:element core:fields.year.start string
        dal:repository:element core:fields.year.end string
        dal:repository:element core:fields.hour.start string
        dal:repository:element core:fields.hour.end string
        dal:repository:element core:fields.minute.start string
        dal:repository:element core:fields.minute.end string
        dal:repository:element core:fields.second.start string
        dal:repository:element core:fields.second.end string
        dal:repository:element core:fields.nano.start string
        dal:repository:element core:fields.nano.end string
        dal:repository:element core:fields.timezone string
        dal:repository:element core:fields.package string

        dal:sequence{core:fields.key, core:fields.type, core:fields.use, core:fields.entries_name, core:fields.http_req_name,
                     core:fields.default_table, core:fields.explode, core:fields.interpreter, core:fields.val_unset, core:fields.isval,
                     core:fields.isval_if, core:fields.isval_else, core:fields.val_do_list, core:fields.description, 
                     core:fields.day.start, core:fields.day.end, core:fields.month.start, core:fields.month.end, core:fields.year.start,
                     core:fields.year.end, core:fields.hour.start, core:fields.hour.end, core:fields.minute.start, core:fields.minute.end,
                     core:fields.second.start, core:fields.second.end, core:fields.nano.start, core:fields.nano.end, core:fields.timezone, core:fields.package}
    }

    dal:table pkg_rabit{
        dal:repository:element core:fields.key string
        dal:repository:element core:rabit.type string
        dal:repository:element core:rabit.target.class string
        dal:repository:element core:rabit.target.template string
        dal:repository:element core:rabit.mime_in string
        dal:repository:element core:rabit.mime_out string
        dal:repository:element core:rabit.css string
        dal:repository:element core:rabit.requests string
        dal:repository:element core:fields.description string

        dal:sequence{core:fields.key, core:rabit.type, core:rabit.target.class, core:rabit.target.template, core:rabit.mime_in,
                     core:rabit.mime_out, core:rabit.css, core:rabit.requests, core:fields.description}
    }

    dal:table pkg_request{
        dal:repository:element core:fields.key string
        dal:repository:element core:requests.fields string
        dal:repository:element core:requests.prefix string
        dal:repository:element core:requests.formselect_fields string
        dal:repository:element core:requests.table string
        dal:repository:element core:requests.table_collections string
        dal:repository:element core:fields.description string

        dal:sequence{core:fields.key, core:requests.fields, core:requests.prefix, core:requests.formselect_fields, core:requests.table, core:requests.table_collections,
                     core:fields.description}
    }
}





dal:package dist.acronyms{
  dal:declaration acronyms{
      dal:element key string{
          dal:element:properties{
              dal:constraint:pkey = dal:constraint:abort
              dal:constraint:nnull = dal:constraint:abort
              dal:constraint:unique = dal:constraint:abort
          }
      }
      dal:element acronyms:long_locale string{
          dal:element:properties{}
          dal:element:repository pkg_fields{
              core:fields.type = "value"
              core:fields.use = "core"
              core:fields.entries_name = "acronyms:long"
              core:fields.http_req_name = "long"
              core:fields.explode = 0
              core:fields.val_unset = null
              core:fields.description = "Long form of an acronym as locale string."
          }
      }
      dal:element acronyms:short string{
          dal:element:properties{}
          dal:element:repository pkg_fields{
              core:fields.type = "value"
              core:fields.use = "core"
              core:fields.entries_name = "acronyms:short"
              core:fields.http_req_name = "short"
              core:fields.explode = 0
              core:fields.val_unset = null
              core:fields.description = "Short form of an acronym."
          }
      }
      dal:element default:url string{
          dal:element:properties{}
      }
      dal:element default:description_locale string{
          dal:element:properties{}
      }
      dal:repository:element default:acronym_key{
          dal:element:repository pkg_fields{
              core:fields.type = "entity"
              core:fields.use = "core" "request"
              core:fields.entries_name = "default:acronym"
              core:fields.http_req_name = "acronym"
              core:fields.default_table = "acronyms"
              core:fields.explode = 0
              core:fields.val_unset = null
              core:fields.description = "An acronym key, i.e. a pointer to a key in the acronym database."
          }
      }

      dal:sequence{key, acronyms:long_locale, acronyms:short, default:url, default:description_locale}
  }


  dal:actions{
    dal:action:set acronyms {key "string"}
    dal:action:ins acronyms {key "string"}
  }

  dal:data {
    acronyms {key "3GPP"}{acronyms:short "3GPP"}{acronyms:long_locale "%3rd Generation Partnership Program"}{default:url null}{default:description_locale null} 
  }
}