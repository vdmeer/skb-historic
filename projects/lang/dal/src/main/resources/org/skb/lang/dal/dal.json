//
// [The BSD License, http://www.opensource.org/licenses/bsd-license.php]
// Copyright (c) 2010-2011, Sven van der Meer <sven@vandermeer.de>
// All rights reserved.
//
// Redistribution  and  use  in  source  and  binary  forms,  with  or  without
// modification, are permitted provided that the following conditions are met:
// 
//     + Redistributions of source code must retain the above copyright notice,
//       this list of conditions and the following disclaimer.
//     + Redistributions  in binary  form must  reproduce the  above copyright
//       notice, this list  of conditions and  the following disclaimer  in the
//       documentation and/or other materials provided with the distribution.
//     + Neither the name of the the author nor the names of its contributors
//       may be used to endorse or promote products derived from this software
//       without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  IS"
// AND ANY EXPRESS  OR IMPLIED WARRANTIES,  INCLUDING, BUT NOT  LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY  AND FITNESS FOR A  PARTICULAR PURPOSE
// ARE DISCLAIMED. IN  NO EVENT SHALL  THE COPYRIGHT HOLDER  OR CONTRIBUTORS BE
// LIABLE  FOR  ANY  DIRECT,  INDIRECT,  INCIDENTAL,  SPECIAL,  EXEMPLARY,   OR
// CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT  LIMITED  TO,  PROCUREMENT  OF
// SUBSTITUTE GOODS  OR SERVICES;  LOSS OF  USE, DATA,  OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER  CAUSED AND  ON ANY  THEORY OF  LIABILITY, WHETHER  IN
// CONTRACT,  STRICT LIABILITY,  OR TORT  (INCLUDING NEGLIGENCE  OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE  USE OF THIS SOFTWARE, EVEN IF ADVISED  OF THE
// POSSIBILITY OF SUCH DAMAGE.
//

//
// Configuration file for the Org.SKB.Lang.Dal
//
// @package    org.skb.lang.dal
// @author     Sven van der Meer <sven@vandermeer.de>
// @copyright  2011-2011 Sven van der Meer
// @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
// @version    v0.30 build 110309 (09-Mar-11)
//

{
    "skb":{
        "tribe":{
            "configuration":{
                "skb.application.name":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"DAL"
                },
                "skb.application.copyright":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"Copyright (c) 2011-2011 Sven van der Meer <sven@vandermeer.de>"
                },
                "skb.application.version":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"0.01"
                },
                "skb.application.build":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"110309"
                },
                "skb.application.builddate":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"2011-Mar-09"
                },
                "skb.application.generic-stg":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"\/org\/skb\/lang\/dal\/stg\/codegen\/internal\/generic.stg"
                }
            }
        },
        "lang":{
            "configuration":{
                "dal":{
                    "skb:util:constant:ident":"internalDalTgtDal",
                    "skb:util:constant:javadoc":"Constant to test internally for the target DAL"
                },
                "sql":{
                    "skb:util:constant:ident":"internalDalTgtSql",
                    "skb:util:constant:javadoc":"Constant to test internally for the target SQL"
                },
                "internal-scope-sep":{
                    "skb:util:constant:ident":"keyScopeSep",
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"@@",
                    "skb:util:constant:javadoc":"Internal scope separator"
                },
                "pr-stats":{
                    "skb:util:constant:ident":"keyPrStat",
                    "skb:value:type":"ts:atomic:java:boolean",
                    "skb:value:default":false,
                    "skb:util:cli:option:long":"pr-stats",
                    "skb:util:cli:option:type":"ts:atomic:java:boolean",
                    "skb:util:cli:descr:short":"Show simple statistic information"
                },
                "pr-stats-all":{
                    "skb:util:constant:ident":"keyPrStatAll",
                    "skb:value:type":"ts:atomic:java:boolean",
                    "skb:value:default":false,
                    "skb:util:cli:option:long":"pr-stats-all",
                    "skb:util:cli:option:type":"ts:atomic:java:boolean",
                    "skb:util:cli:descr:short":"Show complete statistic information",
                    "skb:util:constant:javadoc":"Show complete statistic information"
                },
                "pr-stats-ws":{
                    "skb:util:constant:ident":"keyPrStatsWScope",
                    "skb:value:type":"ts:atomic:java:boolean",
                    "skb:value:default":false,
                    "skb:util:cli:option:long":"pr-stats-ws",
                    "skb:util:cli:option:type":"ts:atomic:java:boolean",
                    "skb:util:cli:descr:short":"No scoped names in statistics",
                    "skb:util:constant:javadoc":"Don't use scoped names in statistics"
                },
                "pr-stg-stats":{
                    "skb:util:constant:ident":"keyPrStgFileStats",
                    "skb:value:type":"ts:atomic:java:boolean",
                    "skb:value:default":false,
                    "skb:util:cli:option:long":"pr-stg-stats",
                    "skb:util:cli:option:type":"ts:atomic:java:boolean",
                    "skb:util:cli:descr:short":"Print statistics string template",
                    "skb:util:constant:javadoc":"Print the string template used for statistics"
                },
                "stat-stg":{
                    "skb:util:constant:ident":"keyStatStg",
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"\/org\/skb\/lang\/dal\/stg\/statistics.stg",
                    "skb:util:cli:option:long":"stat-stg",
                    "skb:util:cli:descr:arguments":"file",
                    "skb:util:cli:option:type":"ts:atomic:java:string",
                    "skb:util:cli:descr:short":"Group template file for statistics",
                    "skb:util:constant:javadoc":"Group template for statistics"
                },
                "print-repo-fields":{
                    "skb:util:constant:ident":"keyPrintRepoFields",
                    "skb:value:type":"ts:atomic:java:boolean",
                    "skb:value:default":false,
                    "skb:util:cli:option:long":"print-repo-fields",
                    "skb:util:cli:option:type":"ts:atomic:java:boolean",
                    "skb:util:cli:descr:short":"Print the Repository Fieldnames to stderr",
                    "skb:util:constant:javadoc":"Print the collected repository fields to stderr"
                }
            },
            "targets":{
                "dal":{
                    "skb.clioption.tgt-stg":{
                            "skb:value:default":"\/org\/skb\/lang\/dal\/stg\/codegen\/targets\/dal.stg"
                    },
                    "skb.clioption.tgt-fileext":{
                            "skb:value:default":".dal"
                    },
                    "skb.clioption.gc-scope-sep":{
                            "skb:value:default":"::"
                    },
                    "skb:lang:target:config:cli":{
                        "tgt-split-repository":{
                            "skb:util:constant:ident":"keyTgSplitRepository",
                            "skb:value:type":"ts:atomic:java:boolean",
                            "skb:value:default":false
                        },
                        "tgt-ignore-empty-st":{
                            "skb:util:constant:ident":"keyTgIgnoreEmptyST",
                            "skb:value:type":"ts:atomic:java:boolean",
                            "skb:value:default":true
                        },
                        "tgt-repo-fileadd":{
                            "skb:util:constant:ident":"keyTgRepoFileAdd",
                            "skb:value:type":"ts:atomic:java:string",
                            "skb:value:default":"-repo"
                        }
                    }
                },
                "sql":{
                    "skb.clioption.tgt-stg":{
                            "skb:value:default":"\/org\/skb\/lang\/dal\/stg\/codegen\/targets\/sql.stg"
                    },
                    "skb.clioption.tgt-fileext":{
                            "skb:value:default":".sql"
                    },
                    "skb.clioption.gc-scope-sep":{
                            "skb:value:default":"::"
                    },
                    "skb:lang:target:config:cli":{
                        "tgt-split-repository":{
                            "skb:util:constant:ident":"keyTgSplitRepository",
                            "skb:value:type":"ts:atomic:java:boolean",
                            "skb:value:default":true
                        },
                        "tgt-ignore-empty-st":{
                            "skb:util:constant:ident":"keyTgIgnoreEmptyST",
                            "skb:value:type":"ts:atomic:java:boolean",
                            "skb:value:default":true
                        },
                        "tgt-repo-fileadd":{
                            "skb:util:constant:ident":"keyTgRepoFileAdd",
                            "skb:value:type":"ts:atomic:java:string",
                            "skb:value:default":"-repo"
                        }
                    }
                }
            },

            "stgchunks":{
                "mlcomment_start":{
                    "skb:stringtemplate:chunks:mandatory": ["dummy"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "mlcomment_end":{
                    "skb:stringtemplate:chunks:mandatory": ["dummy"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "slcomment":{
                    "skb:stringtemplate:chunks:mandatory": ["comment"],
                    "skb:stringtemplate:chunks:optional":  []
                },

                "dalSpecification":{
                    "skb:stringtemplate:chunks:mandatory": ["definition"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalDefinition":{
                    "skb:stringtemplate:chunks:mandatory": ["repository", "packages"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalRepository":{
                    "skb:stringtemplate:chunks:mandatory": ["ident", "tables"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalTable":{
                    "skb:stringtemplate:chunks:mandatory": ["ident", "fields", "sequence"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalField":{
                    "skb:stringtemplate:chunks:mandatory": ["ident", "type", "constraints", "size", "precision", "others"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalFieldConstraint":{
                    "skb:stringtemplate:chunks:mandatory": ["reason", "action"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalSequence":{
                    "skb:stringtemplate:chunks:mandatory": ["keys"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalPackage":{
                    "skb:stringtemplate:chunks:mandatory": ["ident", "repository", "body"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalPackageRepository":{
                    "skb:stringtemplate:chunks:mandatory": ["ident", "tables"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalPackageRepositoryTable":{
                    "skb:stringtemplate:chunks:mandatory": ["ident", "rows"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalPackageRepositoryRow":{
                    "skb:stringtemplate:chunks:mandatory": ["ident", "kv"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalActions":{
                    "skb:stringtemplate:chunks:mandatory": ["body"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalActionsInsert":{
                    "skb:stringtemplate:chunks:mandatory": ["table", "kvl"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalActionsAdd":{
                    "skb:stringtemplate:chunks:mandatory": ["table", "kv", "key"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalActionsRemove":{
                    "skb:stringtemplate:chunks:mandatory": ["table", "kv"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalActionsEmpty":{
                    "skb:stringtemplate:chunks:mandatory": ["table"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalData":{
                    "skb:stringtemplate:chunks:mandatory": ["rows"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "dalDataRow":{
                    "skb:stringtemplate:chunks:mandatory": ["table", "kvl"],
                    "skb:stringtemplate:chunks:optional":  []
                },

                "const_value":{
                    "skb:stringtemplate:chunks:mandatory": ["val"],
                    "skb:stringtemplate:chunks:optional":  []
                }
            },

            "tokens":{
                // for parser
                "parserIDENTIFIER":{
                    "skb:util:constant:ident":"parserIDENTIFIER",
                    "skb:util:constant:value":"identifier",
                    "skb:util:constant:javadoc":"Parser - identifier"
                },
                "parserScopedName":{
                    "skb:util:constant:ident":"parserScopedName",
                    "skb:util:constant:value":"scoped_name",
                    "skb:util:constant:javadoc":"Parser - scoped name"
                },
                "parserBaseType ":{
                    "skb:util:constant:ident":"parserBaseType ",
                    "skb:util:constant:value":"base_type",
                    "skb:util:constant:javadoc":"Parser - base type"
                },
                "parserScopeSep":{
                    "skb:util:constant:ident":"parserScopeSep",
                    "skb:util:constant:value":"::",
                    "skb:util:constant:javadoc":"Parser - scope separator"
                },


                // DAL Keywords -> DAL Specific
                "dalTABLE":{
                    "skb:util:constant:ident":"dalTABLE",
                    "skb:util:constant:value":"table",
                    "skb:lang:target:token:ident":"DAL_TABLE",
                    "skb:lang:target:token:translate":"keyword 'table'",
                    "skb:util:constant:javadoc":"Table Keyword"
                },
                "dalACTION_EMPTY":{
                    "skb:util:constant:ident":"dalACTION_EMPTY",
                    "skb:util:constant:value":"empty",
                    "skb:lang:target:token:ident":"DAL_ACTION_EMPTY",
                    "skb:lang:target:token:translate":"keyword 'empty'",
                    "skb:util:constant:javadoc":"Action Empty Keyword"
                },
                "dalACTION_INSERT":{
                    "skb:util:constant:ident":"dalACTION_INSERT",
                    "skb:util:constant:value":"insert",
                    "skb:lang:target:token:ident":"DAL_ACTION_INSERT",
                    "skb:lang:target:token:translate":"keyword 'insert'",
                    "skb:util:constant:javadoc":"Action Insert Keyword"
                },
                "dalACTION_ADD":{
                    "skb:util:constant:ident":"dalACTION_ADD",
                    "skb:util:constant:value":"add",
                    "skb:lang:target:token:ident":"DAL_ACTION_ADD",
                    "skb:lang:target:token:translate":"keyword 'add'",
                    "skb:util:constant:javadoc":"Action Add Keyword"
                },
                "dalACTION_REMOVE":{
                    "skb:util:constant:ident":"dalACTION_REMOVE",
                    "skb:util:constant:value":"remove",
                    "skb:lang:target:token:ident":"DAL_ACTION_REMOVE",
                    "skb:lang:target:token:translate":"keyword 'remove'",
                    "skb:util:constant:javadoc":"Action Remove Keyword"
                },
                "dalACTIONS":{
                    "skb:util:constant:ident":"dalACTIONS",
                    "skb:util:constant:value":"actions",
                    "skb:lang:target:token:ident":"DAL_ACTIONS",
                    "skb:lang:target:token:translate":"keyword 'actions'",
                    "skb:util:constant:javadoc":"Actions Keyword"
                },
                "dalABORT":{
                    "skb:util:constant:ident":"dalABORT",
                    "skb:util:constant:value":"abort",
                    "skb:lang:target:token:ident":"DAL_ABORT",
                    "skb:lang:target:token:translate":"keyword 'abort'",
                    "skb:util:constant:javadoc":"Abort Keyword"
                },
                "dalNOTNUL":{
                    "skb:util:constant:ident":"dalNOTNUL",
                    "skb:util:constant:value":"notnull",
                    "skb:lang:target:token:ident":"DAL_NOTNUL",
                    "skb:lang:target:token:translate":"keyword 'notnull'",
                    "skb:util:constant:javadoc":"Not_Null Keyword"
                },
                "dalPRIMKEY":{
                    "skb:util:constant:ident":"dalPRIMKEY",
                    "skb:util:constant:value":"primkey",
                    "skb:lang:target:token:ident":"DAL_PRIMKEY",
                    "skb:lang:target:token:translate":"keyword 'primkey'",
                    "skb:util:constant:javadoc":"PrimKey Keyword"
                },
                "dalROLLBACK":{
                    "skb:util:constant:ident":"dalROLLBACK",
                    "skb:util:constant:value":"rollback",
                    "skb:lang:target:token:ident":"DAL_ROLLBACK",
                    "skb:lang:target:token:translate":"keyword 'rollback'",
                    "skb:util:constant:javadoc":"Rollback Keyword"
                },
                "dalUNIQUE":{
                    "skb:util:constant:ident":"dalUNIQUE",
                    "skb:util:constant:value":"unique",
                    "skb:lang:target:token:ident":"DAL_UNIQUE",
                    "skb:lang:target:token:translate":"keyword 'unique'",
                    "skb:util:constant:javadoc":"Unique Keyword"
                },
                "dalDATA":{
                    "skb:util:constant:ident":"dalDATA",
                    "skb:util:constant:value":"data",
                    "skb:lang:target:token:ident":"DAL_DATA",
                    "skb:lang:target:token:translate":"keyword 'data'",
                    "skb:util:constant:javadoc":"Data Keyword"
                },
                "dalCOLLATE":{
                    "skb:util:constant:ident":"dalCOLLATE",
                    "skb:util:constant:value":"collate",
                    "skb:lang:target:token:ident":"DAL_COLLATE",
                    "skb:lang:target:token:translate":"keyword 'collate'",
                    "skb:util:constant:javadoc":"Collate Keyword"
                },
                "dalDEFVAL":{
                    "skb:util:constant:ident":"dalDEFVAL",
                    "skb:util:constant:value":"defval",
                    "skb:lang:target:token:ident":"DAL_DEFVAL",
                    "skb:lang:target:token:translate":"keyword 'defval'",
                    "skb:util:constant:javadoc":"DefVal Keyword"
                },
                "dalPRECISION":{
                    "skb:util:constant:ident":"dalPRECISION",
                    "skb:util:constant:value":"precision",
                    "skb:lang:target:token:ident":"DAL_PRECISION",
                    "skb:lang:target:token:translate":"keyword 'precision'",
                    "skb:util:constant:javadoc":"Precision Keyword"
                },
                "dalSIZE":{
                    "skb:util:constant:ident":"dalSIZE",
                    "skb:util:constant:value":"size",
                    "skb:lang:target:token:ident":"DAL_SIZE",
                    "skb:lang:target:token:translate":"keyword 'size'",
                    "skb:util:constant:javadoc":"Size Keyword"
                },
                "dalREPOSITORY":{
                    "skb:util:constant:ident":"dalREPOSITORY",
                    "skb:util:constant:value":"repository",
                    "skb:lang:target:token:ident":"DA_REPOSITORY",
                    "skb:lang:target:token:translate":"keyword 'repository'",
                    "skb:util:constant:javadoc":"Repository Keyword"
                },
                "dalSEQUENCE":{
                    "skb:util:constant:ident":"dalSEQUENCE",
                    "skb:util:constant:value":"sequence",
                    "skb:lang:target:token:ident":"DAL_SEQUENCE",
                    "skb:lang:target:token:translate":"keyword 'sequence'",
                    "skb:util:constant:javadoc":"Sequence Keyword"
                },
                "dalPACKAGE":{
                    "skb:util:constant:ident":"dalPACKAGE",
                    "skb:util:constant:value":"package",
                    "skb:lang:target:token:ident":"DAL_PACKAGE",
                    "skb:lang:target:token:translate":"keyword 'package'",
                    "skb:util:constant:javadoc":"Package Keyword"
                },
                "dalROW":{
                    "skb:util:constant:ident":"dalROW",
                    "skb:util:constant:value":"row",
                    "skb:lang:target:token:ident":"DAL_ROW",
                    "skb:lang:target:token:translate":"keyword 'row'",
                    "skb:util:constant:javadoc":"Row Keyword"
                },
                "dalDEFVALUE":{
                    "skb:util:constant:ident":"dalDEFVALUE",
                    "skb:util:constant:value":"defvalue",
                    "skb:lang:target:token:ident":"DAL_DEFVALUE",
                    "skb:lang:target:token:translate":"keyword 'defvalue'",
                    "skb:util:constant:javadoc":"DefValue Keyword"
                },
                "dalFIELD":{
                    "skb:util:constant:ident":"dalFIELD",
                    "skb:util:constant:value":"field",
                    "skb:lang:target:token:ident":"DAL_FIELD",
                    "skb:lang:target:token:translate":"keyword 'field'",
                    "skb:util:constant:javadoc":"Field Keyword"
                },

                // DAL Keywords -> TYPES
                "dalBINARY":{
                    "skb:util:constant:ident":"dalBINARY",
                    "skb:util:constant:value":"binary",
                    "skb:lang:target:token:ident":"BINARY",
                    "skb:lang:target:token:translate":"keyword 'binary'",
                    "skb:util:constant:javadoc":"Binary Keyword"
                },
                "dalBOOLEAN":{
                    "skb:util:constant:ident":"dalBOOLEAN",
                    "skb:util:constant:value":"boolean",
                    "skb:lang:target:token:ident":"BOOLEAN",
                    "skb:lang:target:token:translate":"keyword 'boolean'",
                    "skb:util:constant:javadoc":"Boolean Keyword"
                },
                "dalCHAR":{
                    "skb:util:constant:ident":"dalCHAR",
                    "skb:util:constant:value":"char",
                    "skb:lang:target:token:ident":"CHAR",
                    "skb:lang:target:token:translate":"keyword 'char'",
                    "skb:util:constant:javadoc":"Char Keyword"
                },
                "dalDOUBLE":{
                    "skb:util:constant:ident":"dalDOUBLE",
                    "skb:util:constant:value":"double",
                    "skb:lang:target:token:ident":"DOUBLE",
                    "skb:lang:target:token:translate":"keyword 'double'",
                    "skb:util:constant:javadoc":"Double Keyword"
                },
                "dalFLOAT":{
                    "skb:util:constant:ident":"dalFLOAT",
                    "skb:util:constant:value":"float",
                    "skb:lang:target:token:ident":"FLOAT",
                    "skb:lang:target:token:translate":"keyword 'float'",
                    "skb:util:constant:javadoc":"Float Keyword"
                },
                "dalHEX":{
                    "skb:util:constant:ident":"dalHEX",
                    "skb:util:constant:value":"hex",
                    "skb:lang:target:token:ident":"HEX",
                    "skb:lang:target:token:translate":"keyword 'hex'",
                    "skb:util:constant:javadoc":"Hex Keyword"
                },
                "dalINTEGER":{
                    "skb:util:constant:ident":"dalINTEGER",
                    "skb:util:constant:value":"integer",
                    "skb:lang:target:token:ident":"INTEGER",
                    "skb:lang:target:token:translate":"keyword 'integer'",
                    "skb:util:constant:javadoc":"Integer Keyword"
                },
                "dalLONG":{
                    "skb:util:constant:ident":"dalLONG",
                    "skb:util:constant:value":"long",
                    "skb:lang:target:token:ident":"LONG",
                    "skb:lang:target:token:translate":"keyword 'long'",
                    "skb:util:constant:javadoc":"Long Keyword"
                },
                "dalSHORT":{
                    "skb:util:constant:ident":"dalSHORT",
                    "skb:util:constant:value":"short",
                    "skb:lang:target:token:ident":"SHORT",
                    "skb:lang:target:token:translate":"keyword 'short'",
                    "skb:util:constant:javadoc":"Short Keyword"
                },
                "dalSTRING":{
                    "skb:util:constant:ident":"dalSTRING",
                    "skb:util:constant:value":"string",
                    "skb:lang:target:token:ident":"STRING",
                    "skb:lang:target:token:translate":"keyword 'string'",
                    "skb:util:constant:javadoc":"String Keyword"
                },
                "dalVOID":{
                    "skb:util:constant:ident":"dalVOID",
                    "skb:util:constant:value":"void",
                    "skb:lang:target:token:ident":"VOID",
                    "skb:lang:target:token:translate":"keyword 'void'",
                    "skb:util:constant:javadoc":"Void Keyword"
                },


                // DAL Keywords -> VALUES
                "dalFALSE":{
                    "skb:util:constant:ident":"dalFALSE",
                    "skb:util:constant:value":"FALSE",
                    "skb:lang:target:token:ident":"FALSE",
                    "skb:lang:target:token:translate":"keyword 'FALSE'",
                    "skb:util:constant:javadoc":"FALSE Value"
                },
                "dalNULL":{
                    "skb:util:constant:ident":"dalNULL",
                    "skb:util:constant:value":"NULL",
                    "skb:lang:target:token:ident":"NULL",
                    "skb:lang:target:token:translate":"keyword 'NULL'",
                    "skb:util:constant:javadoc":"NULL Value"
                },
                "dalTRUE":{
                    "skb:util:constant:ident":"dalTRUE",
                    "skb:util:constant:value":"TRUE",
                    "skb:lang:target:token:ident":"TRUE",
                    "skb:lang:target:token:translate":"keyword 'TRUE'",
                    "skb:util:constant:javadoc":"TRUE Value"
                },


                // DAL Keywords -> @@@
                "dalAT_PROVIDES":{
                    "skb:util:constant:ident":"dalAT_PROVIDES",
                    "skb:util:constant:value":"@provides",
                    "skb:lang:target:token:ident":"AT_PROVIDES",
                    "skb:lang:target:token:translate":"an @ keyword '@provides'",
                    "skb:util:constant:javadoc":"Constant for &#64;Provides"
                },
                "dalAT_SPEC":{
                    "skb:util:constant:ident":"dalAT_SPEC",
                    "skb:util:constant:value":"@spec",
                    "skb:lang:target:token:ident":"AT_SPEC",
                    "skb:lang:target:token:translate":"an @ keyword '@spec'",
                    "skb:util:constant:javadoc":"Constant for &#64;Spec"
                },


                //for lexer to print proper error messages
                "dalCPP_DIRECTIVE":{
                    "skb:util:constant:ident":"dalCPP_DIRECTIVE",
                    "skb:util:constant:value":"preprocessor directive",
                    "skb:lang:target:token:ident":"CPP_DIRECTIVE",
                    "skb:lang:target:token:translate":"preprocessor directive",
                    "skb:util:constant:javadoc":"CPP Directive"
                },
                "dalESC":{
                    "skb:util:constant:ident":"dalESC",
                    "skb:util:constant:value":"escape sequence",
                    "skb:lang:target:token:ident":"ESC",
                    "skb:lang:target:token:translate":"escape sequence",
                    "skb:util:constant:javadoc":"Escape Sequence"
                },
                "dalFloatSuffix":{
                    "skb:util:constant:ident":"dalFloatSuffix",
                    "skb:util:constant:value":"floating point suffix",
                    "skb:lang:target:token:ident":"FloatSuffix",
                    "skb:lang:target:token:translate":"floating point suffix",
                    "skb:util:constant:javadoc":"Float Suffixe"
                },
                "dalHexDigit":{
                    "skb:util:constant:ident":"dalHexDigit",
                    "skb:util:constant:value":"hexadecimal digit",
                    "skb:lang:target:token:ident":"HexDigit",
                    "skb:lang:target:token:translate":"hexadecimal digit",
                    "skb:util:constant:javadoc":"Hex Digit"
                },
                "dalIDENT":{
                    "skb:util:constant:ident":"dalIDENT",
                    "skb:util:constant:value":"identifier",
                    "skb:lang:target:token:ident":"IDENT",
                    "skb:lang:target:token:translate":"an identifier",
                    "skb:util:constant:javadoc":"Identifier"
                },
                "dalML_COMMENT":{
                    "skb:util:constant:ident":"dalML_COMMENT",
                    "skb:util:constant:value":"multiple line comment",
                    "skb:lang:target:token:ident":"ML_COMMENT",
                    "skb:lang:target:token:translate":"multiple line comment",
                    "skb:util:constant:javadoc":"Multiline Comment"
                },
                "dalOctalEscape":{
                    "skb:util:constant:ident":"dalOctalEscape",
                    "skb:util:constant:value":"octal escape sequence",
                    "skb:lang:target:token:ident":"OctalEscape",
                    "skb:lang:target:token:translate":"octal escape sequence",
                    "skb:util:constant:javadoc":"Octal Escape"
                },
                "dalSL_COMMENT":{
                    "skb:util:constant:ident":"dalSL_COMMENT",
                    "skb:util:constant:value":"single line comment",
                    "skb:lang:target:token:ident":"SL_COMMENT",
                    "skb:lang:target:token:translate":"single line comment",
                    "skb:util:constant:javadoc":"Single Line Comment"
                },
                "dalUnicodeEscape":{
                    "skb:util:constant:ident":"dalUnicodeEscape",
                    "skb:util:constant:value":"unicode escape sequence",
                    "skb:lang:target:token:ident":"UnicodeEscape",
                    "skb:lang:target:token:translate":"unicode escape sequence",
                    "skb:util:constant:javadoc":"Unicode Escape"
                },
                "dalVAL_BINARY":{
                    "skb:util:constant:ident":"dalVAL_BINARY",
                    "skb:util:constant:value":"binary value",
                    "skb:lang:target:token:ident":"VAL_BINARY",
                    "skb:lang:target:token:translate":"binary value",
                    "skb:util:constant:javadoc":"Binary value"
                },
                "dalVAL_CHAR":{
                    "skb:util:constant:ident":"dalVAL_CHAR",
                    "skb:util:constant:value":"character value",
                    "skb:lang:target:token:ident":"VAL_CHAR",
                    "skb:lang:target:token:translate":"character value",
                    "skb:util:constant:javadoc":"Char value"
                },
                "dalVAL_FLOAT":{
                    "skb:util:constant:ident":"dalVAL_FLOAT",
                    "skb:util:constant:value":"floating point value",
                    "skb:lang:target:token:ident":"VAL_FLOAT",
                    "skb:lang:target:token:translate":"floating point value",
                    "skb:util:constant:javadoc":"Float value"
                },
                "dalVAL_HEX":{
                    "skb:util:constant:ident":"dalVAL_HEX",
                    "skb:util:constant:value":"hexadecimal value",
                    "skb:lang:target:token:ident":"VAL_HEX",
                    "skb:lang:target:token:translate":"hexadecimal value",
                    "skb:util:constant:javadoc":"Hex value"
                },
                "dalVAL_INTEGER":{
                    "skb:util:constant:ident":"dalVAL_INTEGER",
                    "skb:util:constant:value":"integer value",
                    "skb:lang:target:token:ident":"VAL_INTEGER",
                    "skb:lang:target:token:translate":"integer value",
                    "skb:util:constant:javadoc":"Integer value"
                },
                "dalVAL_STRING":{
                    "skb:util:constant:ident":"dalVAL_STRING",
                    "skb:util:constant:value":"string value",
                    "skb:lang:target:token:ident":"VAL_STRING",
                    "skb:lang:target:token:translate":"string value",
                    "skb:util:constant:javadoc":"String value"
                },
                "dalWS":{
                    "skb:util:constant:ident":"dalWS",
                    "skb:util:constant:value":"whitespace",
                    "skb:lang:target:token:ident":"WS",
                    "skb:lang:target:token:translate":"whitespace",
                    "skb:util:constant:javadoc":"Whitespace"
                },


                //for lexer to print proper error messages
                ";":{
                    "skb:lang:target:token:ident":"';'",
                    "skb:lang:target:token:translate":"character ';'"
                },
                "}":{
                    "skb:lang:target:token:ident":"'}'",
                    "skb:lang:target:token:translate":"character '}'"
                },
                "=":{
                    "skb:lang:target:token:ident":"'='",
                    "skb:lang:target:token:translate":"character '='"
                },
                "(":{
                    "skb:lang:target:token:ident":"'('",
                    "skb:lang:target:token:translate":"character '('"
                },
                ":":{
                    "skb:lang:target:token:ident":"':'",
                    "skb:lang:target:token:translate":"character ':'"
                },
                "::":{
                    "skb:lang:target:token:ident":"'::'",
                    "skb:lang:target:token:translate":"scope operator '::'"
                },
                "[":{
                    "skb:lang:target:token:ident":"'['",
                    "skb:lang:target:token:translate":"character '['"
                },
                ",":{
                    "skb:lang:target:token:ident":"','",
                    "skb:lang:target:token:translate":"character ','"
                },
                ")":{
                    "skb:lang:target:token:ident":"')'",
                    "skb:lang:target:token:translate":"character ')'"
                },
                "{":{
                    "skb:lang:target:token:ident":"'{'",
                    "skb:lang:target:token:translate":"character '{'"
                },
                "]":{
                    "skb:lang:target:token:ident":"']'",
                    "skb:lang:target:token:translate":"character ']'"
                }
            },

            "rules":{
                "identifier:01":{
                    "skb:util:constant:ident":"ruleIdentifier01",
                    "skb:lang:parser:rules:message":"#### used more than once",
                    "skb:lang:parser:rules:message:add":"#### <%s> in property definitions",
                    "skb:lang:parser:rules:message:insert:path":"parserIDENTIFIER",
                    "skb:lang:target:rules:message:add:insert:path":"parserIDENTIFIER",
                    "skb:util:constant:javadoc":"Rule for identifier #01"
                },
                "identifier:02":{
                    "skb:util:constant:ident":"ruleIdentifier02",
                    "skb:lang:parser:rules:message":"#### used more than once",
                    "skb:lang:parser:rules:message:add":"in <%s> declaration for <%s>: <%s> (previously used in <%s>)",
                    "skb:lang:parser:rules:message:insert:path":"parserIDENTIFIER",
                    "skb:util:constant:javadoc":"Rule for identifier #02"
                },
                "identifier:03":{
                    "skb:util:constant:ident":"ruleIdentifier03",
                    "skb:lang:parser:rules:message":"#### used more than once",
                    "skb:lang:parser:rules:message:add":"#### <%s> in item-property definitions",
                    "skb:lang:parser:rules:message:insert:path":"parserIDENTIFIER",
                    "skb:lang:target:rules:message:add:insert:path":"parserIDENTIFIER",
                    "skb:util:constant:javadoc":"Rule for identifier #03"
                },
                "identifier:04":{
                    "skb:util:constant:ident":"ruleIdentifier04",
                "skb:lang:parser:rules:message":"#### used more than once",
                    "skb:lang:parser:rules:message:add":"in #### definition: %s",
                    "skb:lang:parser:rules:message:insert:path":"parserIDENTIFIER",
                    "skb:lang:target:rules:message:add:insert:path":"parserItemProp",
                    "skb:util:constant:javadoc":"Rule for identifier #04"
                },
                "identifier:05":{
                    "skb:util:constant:ident":"ruleIdentifier05",
                    "skb:lang:parser:rules:message":"#### used more than once",
                    "skb:lang:parser:rules:message:add":"in #### definition: %s",
                    "skb:lang:parser:rules:message:insert:path":"parserIDENTIFIER",
                    "skb:lang:target:rules:message:add:insert:path":"colaPROPERTY",
                    "skb:util:constant:javadoc":"Rule for identifier #05"
                },
                "identifier:06":{
                    "skb:util:constant:ident":"ruleIdentifier06",
                    "skb:lang:parser:rules:message":"#### used more than once",
                    "skb:lang:parser:rules:message:add":"in #### definition: %s",
                    "skb:lang:parser:rules:message:insert:path":"parserIDENTIFIER",
                    "skb:lang:target:rules:message:add:insert:path":"colaCONTRACT",
                    "skb:util:constant:javadoc":"Rule for identifier #06"
                }                
            }
        }
    }
}

//tgt-split-code			skb.clioption.tgt-split-code
