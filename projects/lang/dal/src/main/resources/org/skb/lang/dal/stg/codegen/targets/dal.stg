/* Copyright (c) 2011-2011 Sven van der Meer (sven@vandermeer.de)
 * All rights reserved.
 *
 * Redistribution  and  use  in  source  and  binary  forms,  with  or  without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     + Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     + Redistributions  in binary  form must  reproduce the  above copyright
 *       notice, this list  of conditions and  the following disclaimer  in the
 *       documentation and/or other materials provided with the distribution.
 *     + Neither the name of the the author nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  IS"
 * AND ANY EXPRESS  OR IMPLIED WARRANTIES,  INCLUDING, BUT NOT  LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY  AND FITNESS FOR A  PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN  NO EVENT SHALL  THE COPYRIGHT HOLDER  OR CONTRIBUTORS BE
 * LIABLE  FOR  ANY  DIRECT,  INDIRECT,  INCIDENTAL,  SPECIAL,  EXEMPLARY,   OR
 * CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT  LIMITED  TO,  PROCUREMENT  OF
 * SUBSTITUTE GOODS  OR SERVICES;  LOSS OF  USE, DATA,  OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER  CAUSED AND  ON ANY  THEORY OF  LIABILITY, WHETHER  IN
 * CONTRACT,  STRICT LIABILITY,  OR TORT  (INCLUDING NEGLIGENCE  OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE  USE OF THIS SOFTWARE, EVEN IF ADVISED  OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Template file for the target dal in Org.SKB.Lang.Dal
 *
 * @package    org.skb.lang.dal
 * @author     Sven van der Meer <sven@vandermeer.de>
 * @copyright  2011-2011 Sven van der Meer
 * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
 * @version    v1.0.0 build 110901 (01-Sep-11) for StringTemplate v3.2.0
 */

group dal;

mlcomment_start(dummy) ::= "/*"
mlcomment_end(dummy) ::= "*/"
slcomment(comment) ::= "// <comment>"

dalSpecification(definition) ::= <<
<definition>
>>

dalDefinition(repository, packages) ::= <<
<repository>
<packages; separator="\n\n">
>>

dalRepository(ident, tables) ::= <<
repository <ident>{
    <tables;separator="\n\n">
}
>>

dalTable(ident, fields, sequence) ::= <<
table <ident>{
    <fields; separator="\n">

    <sequence>
}
>>

dalField(ident, type, constraints, size, precision, others) ::= <<
field <ident> <type><if(size)> size(<size>)<endif><if(precision)> precision(<precision>)<endif><if(constraints)> <constraints; separator=" "><endif><if(others)> <others; separator=" "><endif>;
>>

dalFieldConstraint(reason, action) ::= <<
<if(reason)><if(action)><reason>(<action>)<endif><endif>
>>

dalSequence(keys) ::= <<
sequence{<keys;separator=", ">}
>>

dalPackage(ident, empty, remove, repository, body) ::= <<
package <ident>{
    <if(empty)><empty><endif>
    <if(remove)><remove><endif>

    <repository>

    <body;separator="\n\n">
}
>>

dalPackageRepository(ident, tables) ::= <<
repository <ident>{
    <tables;separator="\n\n">
}
>>

dalPackageRepositoryTable(ident, rows) ::= <<
table <ident>{
    <rows;separator="\n">
}
>>

dalPackageRepositoryRow(ident, kv) ::= <<
    row <ident>
        <kv.keys:{k| <k> = "<kv.(k)>"};separator="\n">
        ;
>>

dalActions(actions) ::= <<
actions{
    <actions; separator="\n">
}
>>

dalActionsInsert(table, kvl) ::= <<
insert table <table> <kvl.keys:{k|<k> <kvl.(k)>};separator=" ">
>>

dalActionsAdd(table, kv, key) ::= <<
add table <table> <kv.keys:{k|<k> <kv.(k)>};separator=" "> <key>
>>

dalActionsRemove(table, kv) ::= <<
remove table <table> <kv.keys:{k|<k> <kv.(k)>};separator=" ">
>>

dalActionsEmpty(table) ::= <<
empty table <table>
>>

dalData(rows) ::= <<
data{
    <rows;separator="\n">
}
>>

dalDataRow(table, kvl) ::= <<
table <table> <kvl.keys:{k|<k> <kvl.(k)>};separator=" ">
>>

const_value(val) ::= "<val>"