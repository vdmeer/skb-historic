//
// [The BSD License, http://www.opensource.org/licenses/bsd-license.php]
// Copyright (c) 2010-2011, Sven van der Meer <sven@vandermeer.de>
// All rights reserved.
//
// Redistribution  and  use  in  source  and  binary  forms,  with  or  without
// modification, are permitted provided that the following conditions are met:
// 
//     + Redistributions of source code must retain the above copyright notice,
//       this list of conditions and the following disclaimer.
//     + Redistributions  in binary  form must  reproduce the  above copyright
//       notice, this list  of conditions and  the following disclaimer  in the
//       documentation and/or other materials provided with the distribution.
//     + Neither the name of the the author nor the names of its contributors
//       may be used to endorse or promote products derived from this software
//       without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  IS"
// AND ANY EXPRESS  OR IMPLIED WARRANTIES,  INCLUDING, BUT NOT  LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY  AND FITNESS FOR A  PARTICULAR PURPOSE
// ARE DISCLAIMED. IN  NO EVENT SHALL  THE COPYRIGHT HOLDER  OR CONTRIBUTORS BE
// LIABLE  FOR  ANY  DIRECT,  INDIRECT,  INCIDENTAL,  SPECIAL,  EXEMPLARY,   OR
// CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT  LIMITED  TO,  PROCUREMENT  OF
// SUBSTITUTE GOODS  OR SERVICES;  LOSS OF  USE, DATA,  OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER  CAUSED AND  ON ANY  THEORY OF  LIABILITY, WHETHER  IN
// CONTRACT,  STRICT LIABILITY,  OR TORT  (INCLUDING NEGLIGENCE  OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE  USE OF THIS SOFTWARE, EVEN IF ADVISED  OF THE
// POSSIBILITY OF SUCH DAMAGE.
//

//
// Configuration file for the Org.SKB.Lang.Pola.Proto
//
// @package    org.skb.lang.pola.proto
// @author     Sven van der Meer <sven@vandermeer.de>
// @copyright  2011-2011 Sven van der Meer
// @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
// @version    v0.30 build 110309 (09-Mar-11)
//

{
    "skb":{
        "tribe":{
            "configuration":{
                "name":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"POLA"
                },
                "name-lc":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"pola"
                },
                "copyright":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"Copyright (c) 2010-2011 Sven van der Meer <sven@vandermeer.de>"
                },
                "version":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"0.30"
                },
                "build":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"110309"
                },
                "build-date":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"2011-Mar-08"
                },
                "tribe-generic-stg":{
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"\/org\/skb\/lang\/pola\/proto\/stg\/codegen\/internal\/generic.stg"
                }
            }
        },
        "lang":{
            "configuration":{
                "pola":{
                    "skb:util:constant:ident":"internalPolaTgtPola",
                    "skb:util:constant:javadoc":"Constant to test internally for the target Pola"
                },
                "xml":{
                    "skb:util:constant:ident":"internalPolaTgtXml",
                    "skb:util:constant:javadoc":"Constant to test internally for the target XML"
                },
                "sql":{
                    "skb:util:constant:ident":"internalPolaTgtSql",
                    "skb:util:constant:javadoc":"Constant to test internally for the target SQL"
                },
                "internal-scope-sep":{
                    "skb:util:constant:ident":"keyScopeSep",
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"::",
                    "skb:util:constant:javadoc":"Constant to test internally for the target SQL"
                },
                "pr-stats":{
                    "skb:util:constant:ident":"keyPrStat",
                    "skb:value:type":"ts:atomic:java:boolean",
                    "skb:value:default":false,
                    "skb:util:cli:option:long":"pr-stats",
                    "skb:util:cli:option:type":"ts:atomic:java:boolean",
                    "skb:util:cli:descr:short":"Show simple statistic information",
                    "skb:util:cli:descr:short":"Show simple statistic information"
                },
                "pr-stats-all":{
                    "skb:util:constant:ident":"keyPrStatAll",
                    "skb:value:type":"ts:atomic:java:boolean",
                    "skb:value:default":false,
                    "skb:util:cli:option:long":"pr-stats-all",
                    "skb:util:cli:option:type":"ts:atomic:java:boolean",
                    "skb:util:cli:descr:short":"Show complete statistic information",
                    "skb:util:constant:javadoc":"Show complete statistic information"
                },
                "pr-stats-ws":{
                    "skb:util:constant:ident":"keyPrStatsWScope",
                    "skb:value:type":"ts:atomic:java:boolean",
                    "skb:value:default":false,
                    "skb:util:cli:option:long":"pr-stats-ws",
                    "skb:util:cli:option:type":"ts:atomic:java:boolean",
                    "skb:util:cli:descr:short":"No scoped names in statistics",
                    "skb:util:constant:javadoc":"Don't use scoped names in statistics"
                },
                "pr-stg-stats":{
                    "skb:util:constant:ident":"keyPrStgFileStats",
                    "skb:value:type":"ts:atomic:java:boolean",
                    "skb:value:default":false,
                    "skb:util:cli:option:long":"pr-stg-stats",
                    "skb:util:cli:option:type":"ts:atomic:java:boolean",
                    "skb:util:cli:descr:short":"Print statistics string template",
                    "skb:util:constant:javadoc":"Print the string template used for statistics"
                },
                "stat-stg":{
                    "skb:util:constant:ident":"keyStatStg",
                    "skb:value:type":"ts:atomic:java:string",
                    "skb:value:default":"\/org\/skb\/lang\/pola\/proto\/stg\/statistics.stg",
                    "skb:util:cli:option:long":"stat-stg",
                    "skb:util:cli:descr:arguments":"file",
                    "skb:util:cli:option:type":"ts:atomic:java:string",
                    "skb:util:cli:descr:short":"Group template file for statistics",
                    "skb:util:constant:javadoc":"Group template for statistics"
                }
            },
            "targets":{
                "pola":{
                    "tgt-stg":{
                            "skb:value:default":"\/org\/skb\/lang\/pola\/proto\/stg\/codegen\/targets\/pola.stg"
                    },
                    "tgt-fileext":{
                            "skb:value:default":".pola"
                    },
                    "gc-scope-sep":{
                            "skb:value:default":"::"
                    },
                    "skb:lang:target:config:cli":{
                    }
                },
                "xml":{
                    "tgt-stg":{
                            "skb:value:default":"\/org\/skb\/lang\/pola\/proto\/stg\/codegen\/targets\/xml.stg"
                    },
                    "tgt-fileext":{
                            "skb:value:default":".xml"
                    },
                    "gc-scope-sep":{
                            "skb:value:default":"::"
                    },
                    "tgt-stg-angle-br":{
                        "skb:value:default":false
                    },
                    "skb:lang:target:config:cli":{
                    }
                },
                "sql":{
                    "tgt-stg":{
                            "skb:value:default":"\/org\/skb\/lang\/pola\/proto\/stg\/codegen\/targets\/sql.stg"
                    },
                    "tgt-fileext":{
                            "skb:value:default":".sql"
                    },
                    "gc-scope-sep":{
                            "skb:value:default":"::"
                    },
                    "skb:lang:target:config:cli":{
                    }
                }
            },

            "stgchunks":{
                "mlcomment_start":{
                    "skb:stringtemplate:chunks:mandatory": ["dummy"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "mlcomment_end":{
                    "skb:stringtemplate:chunks:mandatory": ["dummy"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "slcomment":{
                    "skb:stringtemplate:chunks:mandatory": ["comment"],
                    "skb:stringtemplate:chunks:optional":  []
                },
        
                "polaSpecification":{
                    "skb:stringtemplate:chunks:mandatory": ["id", "dialect"],
                    "skb:stringtemplate:chunks:optional":  []
                },

                "const_value":{
                    "skb:stringtemplate:chunks:mandatory": ["type", "val"],
                    "skb:stringtemplate:chunks:optional":  []
                },
                "scoped_name":{
                    "skb:stringtemplate:chunks:mandatory": ["id", "add"],
                    "skb:stringtemplate:chunks:optional":  []
                }
            },

            "tokens":{
                // for parser
                "parserARRAY":{
                    "skb:util:constant:ident":"parserARRAY",
                    "skb:util:constant:value":"array",
                    "skb:util:constant:javadoc":"Parser - Array"
                },
                "parserMEMBER":{
                    "skb:util:constant:ident":"parserMEMBER",
                    "skb:util:constant:value":"__member",
                    "skb:util:constant:javadoc":"Parser - Member"
                },
                "parserIDENTIFIER":{
                    "skb:util:constant:ident":"parserIDENTIFIER",
                    "skb:util:constant:value":"identifier",
                    "skb:util:constant:javadoc":"Parser - Identifier"
                },
                "parserScopedName":{
                    "skb:util:constant:ident":"parserScopedName",
                    "skb:util:constant:value":"scoped_name",
                    "skb:util:constant:javadoc":"Parser - Scoped Name"
                },
                "parserBaseType ":{
                    "skb:util:constant:ident":"parserBaseType ",
                    "skb:util:constant:value":"base_type",
                    "skb:util:constant:javadoc":"Parser - Base Type"
                },
                "parserItemProp":{
                    "skb:util:constant:ident":"parserItemProp",
                    "skb:util:constant:value":"item-property",
                    "skb:util:constant:javadoc":"Parser - Item Property"
                },
                "parserScopeSep":{
                    "skb:util:constant:ident":"parserScopeSep",
                    "skb:util:constant:value":"::",
                    "skb:util:constant:javadoc":"Parser - Scope Separator"
                },
                "gcMiscParrentID":{
                    "skb:util:constant:ident":"gcMiscParrentID",
                    "skb:util:constant:value":"parrentId",
                    "skb:util:constant:javadoc":"Generate Code - Misc - Parrent Identifier"
                },
                "gcMiscParrentCat":{
                    "skb:util:constant:ident":"gcMiscParrentCat",
                    "skb:util:constant:value":"parrentCategory",
                    "skb:util:constant:javadoc":"Generate Code - Misc - Parrent Category"
                },
                "gcMiscCurrentCat":{
                    "skb:util:constant:ident":"gcMiscCurrentCat",
                    "skb:util:constant:value":"currentCategory",
                    "skb:util:constant:javadoc":"Generate Code - Misc Current Category"
                },
                "gcMiscInDefinition":{
                    "skb:util:constant:ident":"gcMiscInDefinition",
                    "skb:util:constant:value":"inDefinition",
                    "skb:util:constant:javadoc":"Generate Code - in a Definition"
                },
                "gcMiscInItem":{
                    "skb:util:constant:ident":"gcMiscInItem",
                    "skb:util:constant:value":"inItem",
                    "skb:util:constant:javadoc":"Generate Code - in an Item"
                },
                "gcMiscInContract":{
                    "skb:util:constant:ident":"gcMiscInContract",
                    "skb:util:constant:value":"inContract",
                    "skb:util:constant:javadoc":"Generate Code - in a Contract"
                },
                "gcMiscInPackage":{
                    "skb:util:constant:ident":"gcMiscInPackage",
                    "skb:util:constant:value":"inPackage",
                    "skb:util:constant:javadoc":"Generate Code - in a Package"
                },
                "gcMiscInElement":{
                    "skb:util:constant:ident":"gcMiscInElement",
                    "skb:util:constant:value":"inElement",
                    "skb:util:constant:javadoc":"Generate Code - in an Element"
                },
                "gcMiscInFacility":{
                    "skb:util:constant:ident":"gcMiscInFacility",
                    "skb:util:constant:value":"inFacility",
                    "skb:util:constant:javadoc":"Generate Code - in a Facility"
                },
                "gcMiscInAction":{
                    "skb:util:constant:ident":"gcMiscInAction",
                    "skb:util:constant:value":"inAction",
                    "skb:util:constant:javadoc":"Generate Code - in an Action"
                },
                "gcMiscInStruct":{
                    "skb:util:constant:ident":"gcMiscInStruct",
                    "skb:util:constant:value":"inStruct",
                    "skb:util:constant:javadoc":"Generate Code - in a Structure"
                },
                "gcMiscSpecName":{
                    "skb:util:constant:ident":"gcMiscSpecName",
                    "skb:util:constant:value":"specificationName",
                    "skb:util:constant:javadoc":"Generate Code - Misc - Specification Name"
                },
                "gcMiscCurrentScope":{
                    "skb:util:constant:ident":"gcMiscCurrentScope",
                    "skb:util:constant:value":"currentScope",
                    "skb:util:constant:javadoc":"Generate Code -  Misc - Current Scope"
                },


                // pola Keywords
                "polaACTION":{
                    "skb:util:constant:ident":"polaACTION",
                    "skb:util:constant:value":"action",
                    "skb:lang:target:token:ident":"ACTION",
                    "skb:lang:target:token:translate":"keyword 'action'",
                    "skb:util:constant:javadoc":"Action Keyword"
                },
                "polaATTRIBUTE":{
                    "skb:util:constant:ident":"polaATTRIBUTE",
                    "skb:util:constant:value":"attribute",
                    "skb:lang:target:token:ident":"ATTRIBUTE",
                    "skb:lang:target:token:translate":"keyword 'attribute'",
                    "skb:util:constant:javadoc":"Attribute Keyword"
                },
                "polaCONTRACT":{
                    "skb:util:constant:ident":"polaCONTRACT",
                    "skb:util:constant:value":"contract",
                    "skb:lang:target:token:ident":"CONTRACT",
                    "skb:lang:target:token:translate":"keyword 'contract'",
                    "skb:util:constant:javadoc":"Contract Keyword"
                },
                "polaELEMENT":{
                    "skb:util:constant:ident":"polaELEMENT",
                    "skb:util:constant:value":"element",
                    "skb:lang:target:token:ident":"ELEMENT",
                    "skb:lang:target:token:translate":"keyword 'element'",
                    "skb:util:constant:javadoc":"Element Keyword"
                },
                "polaFACILITY":{
                    "skb:util:constant:ident":"polaFACILITY",
                    "skb:util:constant:value":"facility",
                    "skb:lang:target:token:ident":"FACILITY",
                    "skb:lang:target:token:translate":"keyword 'facility'",
                    "skb:util:constant:javadoc":"Facility Keyword"
                },
                "polaFUNCTION":{
                    "skb:util:constant:ident":"polaFUNCTION",
                    "skb:util:constant:value":"function",
                    "skb:lang:target:token:ident":"FUNCTON",
                    "skb:lang:target:token:translate":"keyword 'function'",
                    "skb:util:constant:javadoc":"Function Keyword"
                },
                "polaITEM":{
                    "skb:util:constant:ident":"polaITEM",
                    "skb:util:constant:value":"item",
                    "skb:lang:target:token:ident":"ITEM",
                    "skb:lang:target:token:translate":"keyword 'item'",
                    "skb:util:constant:javadoc":"Item Keyword"
                },
                "polaMANDATORY":{
                    "skb:util:constant:ident":"polaMANDATORY",
                    "skb:util:constant:value":"mandatory",
                    "skb:lang:target:token:ident":"MANDATORY",
                    "skb:lang:target:token:translate":"keyword 'mandatory'",
                    "skb:util:constant:javadoc":"Mandatory Keyword"
                },
                "polaNOT_DEF":{
                    "skb:util:constant:ident":"polaNOT_DEF",
                    "skb:util:constant:value":"not_def",
                    "skb:lang:target:token:ident":"NOT_DEF",
                    "skb:lang:target:token:translate":"keyword 'not_def'",
                    "skb:util:constant:javadoc":"Not_Def Keyword"
                },
                "polaOPTIONAL":{
                    "skb:util:constant:ident":"polaOPTIONAL",
                    "skb:util:constant:value":"optional",
                    "skb:lang:target:token:ident":"OPTIONAL",
                    "skb:lang:target:token:translate":"keyword 'optional'",
                    "skb:util:constant:javadoc":"Optional Keyword"
                },
                "polaPACKAGE":{
                    "skb:util:constant:ident":"polaPACKAGE",
                    "skb:util:constant:value":"package",
                    "skb:lang:target:token:ident":"PACKAGE",
                    "skb:lang:target:token:translate":"keyword 'package'",
                    "skb:util:constant:javadoc":"Package Keyword"
                },
                "polaPARAMETER":{
                    "skb:util:constant:ident":"polaPARAMETER",
                    "skb:util:constant:value":"parameter",
                    "skb:lang:target:token:ident":"PARAMETER",
                    "skb:lang:target:token:translate":"keyword 'parameter'",
                    "skb:util:constant:javadoc":"Parameter Keyword"
                },
                "polaPROPERTY":{
                    "skb:util:constant:ident":"polaPROPERTY",
                    "skb:util:constant:value":"property",
                    "skb:lang:target:token:ident":"PROPERTY",
                    "skb:lang:target:token:translate":"keyword 'property'",
                    "skb:util:constant:javadoc":"Property Keyword"
                },
                "polaREQUIRED":{
                    "skb:util:constant:ident":"polaREQUIRED",
                    "skb:util:constant:value":"required",
                    "skb:lang:target:token:ident":"REQUIRED",
                    "skb:lang:target:token:translate":"keyword 'required'",
                    "skb:util:constant:javadoc":"Required Keyword"
                },
                "polaSPECIFICATION":{
                    "skb:util:constant:ident":"polaSPECIFICATION",
                    "skb:util:constant:value":"pola-specification",
                    "skb:lang:target:token:ident":"SPECIFICATION",
                    "skb:lang:target:token:translate":"keyword 'pola-specification'",
                    "skb:util:constant:javadoc":"Specification Keyword"
                },
                "polaSTRUCT":{
                    "skb:util:constant:ident":"polaSTRUCT",
                    "skb:util:constant:value":"struct",
                    "skb:lang:target:token:ident":"STRUCT",
                    "skb:lang:target:token:translate":"keyword 'struct'",
                    "skb:util:constant:javadoc":"Struct Keyword"
                },
                "polaTYPEDEF":{
                    "skb:util:constant:ident":"polaTYPEDEF",
                    "skb:util:constant:value":"typedef",
                    "skb:lang:target:token:ident":"TYPEDEF",
                    "skb:lang:target:token:translate":"keyword 'typedef'",
                    "skb:util:constant:javadoc":"TypeDef Keyword"
                },


                // pola Keywords -> TYPES
                "polaBINARY":{
                    "skb:util:constant:ident":"polaBINARY",
                    "skb:util:constant:value":"binary",
                    "skb:lang:target:token:ident":"BINARY",
                    "skb:lang:target:token:translate":"keyword 'binary'",
                    "skb:util:constant:javadoc":"Binary Keyword"
                },
                "polaBOOLEAN":{
                    "skb:util:constant:ident":"polaBOOLEAN",
                    "skb:util:constant:value":"boolean",
                    "skb:lang:target:token:ident":"BOOLEAN",
                    "skb:lang:target:token:translate":"keyword 'boolean'",
                    "skb:util:constant:javadoc":"Boolean Keyword"
                },
                "polaCHAR":{
                    "skb:util:constant:ident":"polaCHAR",
                    "skb:util:constant:value":"char",
                    "skb:lang:target:token:ident":"CHAR",
                    "skb:lang:target:token:translate":"keyword 'char'",
                    "skb:util:constant:javadoc":"Char Keyword"
                },
                "polaDOUBLE":{
                    "skb:util:constant:ident":"polaDOUBLE",
                    "skb:util:constant:value":"double",
                    "skb:lang:target:token:ident":"DOUBLE",
                    "skb:lang:target:token:translate":"keyword 'double'",
                    "skb:util:constant:javadoc":"Double Keyword"
                },
                "polaFLOAT":{
                    "skb:util:constant:ident":"polaFLOAT",
                    "skb:util:constant:value":"float",
                    "skb:lang:target:token:ident":"FLOAT",
                    "skb:lang:target:token:translate":"keyword 'float'",
                    "skb:util:constant:javadoc":"Float Keyword"
                },
                "polaHEX":{
                    "skb:util:constant:ident":"polaHEX",
                    "skb:util:constant:value":"hex",
                    "skb:lang:target:token:ident":"HEX",
                    "skb:lang:target:token:translate":"keyword 'hex'",
                    "skb:util:constant:javadoc":"Hex Keyword"
                },
                "polaINTEGER":{
                    "skb:util:constant:ident":"polaINTEGER",
                    "skb:util:constant:value":"integer",
                    "skb:lang:target:token:ident":"INTEGER",
                    "skb:lang:target:token:translate":"keyword 'integer'",
                    "skb:util:constant:javadoc":"Integer Keyword"
                },
                "polaLONG":{
                    "skb:util:constant:ident":"polaLONG",
                    "skb:util:constant:value":"long",
                    "skb:lang:target:token:ident":"LONG",
                    "skb:lang:target:token:translate":"keyword 'long'",
                    "skb:util:constant:javadoc":"Long Keyword"
                },
                "polaOCTET":{
                    "skb:util:constant:ident":"polaOCTET",
                    "skb:util:constant:value":"octet",
                    "skb:lang:target:token:ident":"OCTET",
                    "skb:lang:target:token:translate":"keyword 'octet'",
                    "skb:util:constant:javadoc":"Octet Keyword"
                },
                "polaSHORT":{
                    "skb:util:constant:ident":"polaSHORT",
                    "skb:util:constant:value":"short",
                    "skb:lang:target:token:ident":"SHORT",
                    "skb:lang:target:token:translate":"keyword 'short'",
                    "skb:util:constant:javadoc":"Short Keyword"
                },
                "polaSTRING":{
                    "skb:util:constant:ident":"polaSTRING",
                    "skb:util:constant:value":"string",
                    "skb:lang:target:token:ident":"STRING",
                    "skb:lang:target:token:translate":"keyword 'string'",
                    "skb:util:constant:javadoc":"String Keyword"
                },
                "polaVOID":{
                    "skb:util:constant:ident":"polaVOID",
                    "skb:util:constant:value":"void",
                    "skb:lang:target:token:ident":"VOID",
                    "skb:lang:target:token:translate":"keyword 'void'",
                    "skb:util:constant:javadoc":"Void Keyword"
                },


                // pola Keywords -> VALUES
                "polaFALSE":{
                    "skb:util:constant:ident":"polaFALSE",
                    "skb:util:constant:value":"FALSE",
                    "skb:lang:target:token:ident":"FALSE",
                    "skb:lang:target:token:translate":"keyword 'FALSE'",
                    "skb:util:constant:javadoc":"FALSE Value"
                },
                "polaNULL":{
                    "skb:util:constant:ident":"polaNULL",
                    "skb:util:constant:value":"NULL",
                    "skb:lang:target:token:ident":"NULL",
                    "skb:lang:target:token:translate":"keyword 'NULL'",
                    "skb:util:constant:javadoc":"NULL Value"
                },
                "polaTRUE":{
                    "skb:util:constant:ident":"polaTRUE",
                    "skb:util:constant:value":"TRUE",
                    "skb:lang:target:token:ident":"TRUE",
                    "skb:lang:target:token:translate":"keyword 'TRUE'",
                    "skb:util:constant:javadoc":"TRUE Value"
                },


                // pola Keywords -> @@@
                "polaAT_ALTERABLE":{
                    "skb:util:constant:ident":"polaAT_ALTERABLE",
                    "skb:util:constant:value":"@alterable",
                    "skb:lang:target:token:ident":"AT_ALTERABLE",
                    "skb:lang:target:token:translate":"an @ keyword '@alterable'",
                    "skb:util:constant:javadoc":"Constant for &#64;Alterable Keyword"
                },
                "polaAT_APPLY":{
                    "skb:util:constant:ident":"polaAT_APPLY",
                    "skb:util:constant:value":"@apply",
                    "skb:lang:target:token:ident":"AT_APPLY",
                    "skb:lang:target:token:translate":"an @ keyword '@apply'",
                    "skb:util:constant:javadoc":"Constant for &#64;Apply Keyword"
                },
                "polaAT_CLEVEL":{
                    "skb:util:constant:ident":"polaAT_CLEVEL",
                    "skb:util:constant:value":"@clevel",
                    "skb:lang:target:token:ident":"AT_CLEVEL",
                    "skb:lang:target:token:translate":"an @ keyword '@clevel'",
                    "skb:util:constant:javadoc":"Constant for &#64;CLevel Keyword"
                },
                "polaAT_CONTAINS":{
                    "skb:util:constant:ident":"polaAT_CONTAINS",
                    "skb:util:constant:value":"@contains",
                    "skb:lang:target:token:ident":"AT_CONTAINS",
                    "skb:lang:target:token:translate":"an @ keyword '@contains'",
                    "skb:util:constant:javadoc":"Constant for &#64;Contains Keyword"
                },
                "polaAT_DESCRIPTION":{
                    "skb:util:constant:ident":"polaAT_DESCRIPTION",
                    "skb:util:constant:value":"@description",
                    "skb:lang:target:token:ident":"AT_DESCRIPTION",
                    "skb:lang:target:token:translate":"an @ keyword '@description'",
                    "skb:util:constant:javadoc":"Constant for &#64;Description Keyword"
                },
                "polaAT_EXTENDS":{
                    "skb:util:constant:ident":"polaAT_EXTENDS",
                    "skb:util:constant:value":"@extends",
                    "skb:lang:target:token:ident":"AT_EXTENDS",
                    "skb:lang:target:token:translate":"an @ keyword '@extends'",
                    "skb:util:constant:javadoc":"Constant for &#64;Extends Keyword"
                },
                "polaAT_ENVIRONMENT":{
                    "skb:util:constant:ident":"polaAT_ENVIRONMENT",
                    "skb:util:constant:value":"@environment",
                    "skb:lang:target:token:ident":"AT_ENVIRONMENT",
                    "skb:lang:target:token:translate":"an @ keyword '@environment'",
                    "skb:util:constant:javadoc":"Constant for &#64;Environment Keyword"
                },
                "polaAT_LANGUAGE":{
                    "skb:util:constant:ident":"polaAT_LANGUAGE",
                    "skb:util:constant:value":"@language",
                    "skb:lang:target:token:ident":"AT_LANGUAGE",
                    "skb:lang:target:token:translate":"an @ keyword '@language'",
                    "skb:util:constant:javadoc":"Constant for &#64;Language Keyword"
                },
                "polaAT_NEGOTIABLE":{
                    "skb:util:constant:ident":"polaAT_NEGOTIABLE",
                    "skb:util:constant:value":"@negotiable",
                    "skb:lang:target:token:ident":"AT_NEGOTIABLE",
                    "skb:lang:target:token:translate":"an @ keyword '@negotiable'",
                    "skb:util:constant:javadoc":"Constant for &#64;Negotiable Keyword"
                },
                "polaAT_PRIORITY":{
                    "skb:util:constant:ident":"polaAT_PRIORITY",
                    "skb:util:constant:value":"@priority",
                    "skb:lang:target:token:ident":"AT_PRIORITY",
                    "skb:lang:target:token:translate":"an @ keyword '@priority'",
                    "skb:util:constant:javadoc":"Constant for &#64;Priority Keyword"
                },
                "polaAT_PROVIDES":{
                    "skb:util:constant:ident":"polaAT_PROVIDES",
                    "skb:util:constant:value":"@provides",
                    "skb:lang:target:token:ident":"AT_PROVIDES",
                    "skb:lang:target:token:translate":"an @ keyword '@provides'",
                    "skb:util:constant:javadoc":"Constant for &#64;Provides Keyword"
                },
                "polaAT_RANK":{
                    "skb:util:constant:ident":"polaAT_RANK",
                    "skb:util:constant:value":"@rank",
                    "skb:lang:target:token:ident":"AT_RANK",
                    "skb:lang:target:token:translate":"an @ keyword '@rank'",
                    "skb:util:constant:javadoc":"Constant for &#64;Rank Keyword"
                },
                "polaAT_REQUIRES":{
                    "skb:util:constant:ident":"polaAT_REQUIRES",
                    "skb:util:constant:value":"@requires",
                    "skb:lang:target:token:ident":"AT_REQUIRES",
                    "skb:lang:target:token:translate":"an @ keyword '@requires'",
                    "skb:util:constant:javadoc":"Constant for &#64;Requires Keyword"
                },
                "polaAT_RETURN":{
                    "skb:util:constant:ident":"polaAT_RETURN",
                    "skb:util:constant:value":"@return",
                    "skb:lang:target:token:ident":"AT_RETURN",
                    "skb:lang:target:token:translate":"an @ keyword '@return'",
                    "skb:util:constant:javadoc":"Constant for &#64;Return Keyword"
                },
                "polaAT_RUNTIME":{
                    "skb:util:constant:ident":"polaAT_RUNTIME",
                    "skb:util:constant:value":"@runtime",
                    "skb:lang:target:token:ident":"AT_RUNTIME",
                    "skb:lang:target:token:translate":"an @ keyword '@runtime'",
                    "skb:util:constant:javadoc":"Constant for &#64;Runtime Keyword"
                },
                "polaAT_SCOPE":{
                    "skb:util:constant:ident":"polaAT_SCOPE",
                    "skb:util:constant:value":"@scope",
                    "skb:lang:target:token:ident":"AT_SCOPE",
                    "skb:lang:target:token:translate":"an @ keyword '@scope'",
                    "skb:util:constant:javadoc":"Constant for &#64;Scope"
                },
                "polaAT_SPEC":{
                    "skb:util:constant:ident":"polaAT_SPEC",
                    "skb:util:constant:value":"@spec",
                    "skb:lang:target:token:ident":"AT_SPEC",
                    "skb:lang:target:token:translate":"an @ keyword '@spec'",
                    "skb:util:constant:javadoc":"Constant for &#64;Spec"
                },
                "polaAT_STAGE":{
                    "skb:util:constant:ident":"polaAT_STAGE",
                    "skb:util:constant:value":"@stage",
                    "skb:lang:target:token:ident":"AT_STAGE",
                    "skb:lang:target:token:translate":"an @ keyword '@stage'",
                    "skb:util:constant:javadoc":"Constant for &#64;Stage"
                },
                "polaAT_TYPE":{
                    "skb:util:constant:ident":"polaAT_TYPE",
                    "skb:util:constant:value":"@type",
                    "skb:lang:target:token:ident":"AT_TYPE",
                    "skb:lang:target:token:translate":"an @ keyword '@type'",
                    "skb:util:constant:javadoc":"Constant for &#64;Type"
                },
                "polaAT_VISIBILITY":{
                    "skb:util:constant:ident":"polaAT_VISIBILITY",
                    "skb:util:constant:value":"@visibility",
                    "skb:lang:target:token:ident":"AT_VISIBILITY",
                    "skb:lang:target:token:translate":"an @ keyword '@visibility'",
                    "skb:util:constant:javadoc":"Constant for &#64;Visibility"
                },


                //for lexer to print proper error messages
                "polaCPP_DIRECTIVE":{
                    "skb:util:constant:ident":"polaCPP_DIRECTIVE",
                    "skb:util:constant:value":"preprocessor directive",
                    "skb:lang:target:token:ident":"CPP_DIRECTIVE",
                    "skb:lang:target:token:translate":"preprocessor directive",
                    "skb:util:constant:javadoc":"CPP Directove"
                },
                "polaESC":{
                    "skb:util:constant:ident":"polaESC",
                    "skb:util:constant:value":"escape sequence",
                    "skb:lang:target:token:ident":"ESC",
                    "skb:lang:target:token:translate":"escape sequence",
                    "skb:util:constant:javadoc":"Escape Sequence"
                },
                "polaFloatSuffix":{
                    "skb:util:constant:ident":"polaFloatSuffix",
                    "skb:util:constant:value":"floating point suffix",
                    "skb:lang:target:token:ident":"FloatSuffix",
                    "skb:lang:target:token:translate":"floating point suffix",
                    "skb:util:constant:javadoc":"Float Suffix"
                },
                "polaHexDigit":{
                    "skb:util:constant:ident":"polaHexDigit",
                    "skb:util:constant:value":"hexadecimal digit",
                    "skb:lang:target:token:ident":"HexDigit",
                    "skb:lang:target:token:translate":"hexadecimal digit",
                    "skb:util:constant:javadoc":"Hex Digit"
                },
                "polaIDENT":{
                    "skb:util:constant:ident":"polaIDENT",
                    "skb:util:constant:value":"identifier",
                    "skb:lang:target:token:ident":"IDENT",
                    "skb:lang:target:token:translate":"an identifier",
                    "skb:util:constant:javadoc":"Identifier"
                },
                "polaINLINE_CODE":{
                    "skb:util:constant:ident":"polaINLINE_CODE",
                    "skb:util:constant:value":"inline code",
                    "skb:lang:target:token:ident":"INLINE_CODE",
                    "skb:lang:target:token:translate":"inline code",
                    "skb:util:constant:javadoc":"Inline Code"
                },
                "polaML_COMMENT":{
                    "skb:util:constant:ident":"polaML_COMMENT",
                    "skb:util:constant:value":"multiple line comment",
                    "skb:lang:target:token:ident":"ML_COMMENT",
                    "skb:lang:target:token:translate":"multiple line comment",
                    "skb:util:constant:javadoc":"Multiline Comment"
                },
                "polaOctDigit":{
                    "skb:util:constant:ident":"polaOctDigit",
                    "skb:util:constant:value":"otcal digit",
                    "skb:lang:target:token:ident":"OctDigit",
                    "skb:lang:target:token:translate":"otcal digit",
                    "skb:util:constant:javadoc":"Oct Digit"
                },
                "polaOctalEscape":{
                    "skb:util:constant:ident":"polaOctalEscape",
                    "skb:util:constant:value":"octal escape sequence",
                    "skb:lang:target:token:ident":"OctalEscape",
                    "skb:lang:target:token:translate":"octal escape sequence",
                    "skb:util:constant:javadoc":"Octal Escape"
                },
                "polaSL_COMMENT":{
                    "skb:util:constant:ident":"polaSL_COMMENT",
                    "skb:util:constant:value":"single line comment",
                    "skb:lang:target:token:ident":"SL_COMMENT",
                    "skb:lang:target:token:translate":"single line comment",
                    "skb:util:constant:javadoc":"Singleline Comment"
                },
                "polaUnicodeEscape":{
                    "skb:util:constant:ident":"polaUnicodeEscape",
                    "skb:util:constant:value":"unicode escape sequence",
                    "skb:lang:target:token:ident":"UnicodeEscape",
                    "skb:lang:target:token:translate":"unicode escape sequence",
                    "skb:util:constant:javadoc":"Unicode Escape"
                },
                "polaVAL_BINARY":{
                    "skb:util:constant:ident":"polaVAL_BINARY",
                    "skb:util:constant:value":"binary value",
                    "skb:lang:target:token:ident":"VAL_BINARY",
                    "skb:lang:target:token:translate":"binary value",
                    "skb:util:constant:javadoc":"Binary Keyword"
                },
                "polaVAL_CHAR":{
                    "skb:util:constant:ident":"polaVAL_CHAR",
                    "skb:util:constant:value":"character value",
                    "skb:lang:target:token:ident":"VAL_CHAR",
                    "skb:lang:target:token:translate":"character value",
                    "skb:util:constant:javadoc":"Char Keyword"
                },
                "polaVAL_FLOAT":{
                    "skb:util:constant:ident":"polaVAL_FLOAT",
                    "skb:util:constant:value":"floating point value",
                    "skb:lang:target:token:ident":"VAL_FLOAT",
                    "skb:lang:target:token:translate":"floating point value",
                    "skb:util:constant:javadoc":"Float Keyword"
                },
                "polaVAL_HEX":{
                    "skb:util:constant:ident":"polaVAL_HEX",
                    "skb:util:constant:value":"hexadecimal value",
                    "skb:lang:target:token:ident":"VAL_HEX",
                    "skb:lang:target:token:translate":"hexadecimal value",
                    "skb:util:constant:javadoc":"Hex Keyword"
                },
                "polaVAL_INTEGER":{
                    "skb:util:constant:ident":"polaVAL_INTEGER",
                    "skb:util:constant:value":"integer value",
                    "skb:lang:target:token:ident":"VAL_INTEGER",
                    "skb:lang:target:token:translate":"integer value",
                    "skb:util:constant:javadoc":"Integer Keyword"
                },
                "polaVAL_OCT":{
                    "skb:util:constant:ident":"polaVAL_OCT",
                    "skb:util:constant:value":"octal value",
                    "skb:lang:target:token:ident":"VAL_OCT",
                    "skb:lang:target:token:translate":"octal value",
                    "skb:util:constant:javadoc":"Oct Keyword"
                },
                "polaVAL_STRING":{
                    "skb:util:constant:ident":"polaVAL_STRING",
                    "skb:util:constant:value":"string value",
                    "skb:lang:target:token:ident":"VAL_STRING",
                    "skb:lang:target:token:translate":"string value",
                    "skb:util:constant:javadoc":"String Keyword"
                },
                "polaWS":{
                    "skb:util:constant:ident":"polaWS",
                    "skb:util:constant:value":"whitespace",
                    "skb:lang:target:token:ident":"WS",
                    "skb:lang:target:token:translate":"whitespace",
                    "skb:util:constant:javadoc":"Whitespace"
                },


                //for lexer to print proper error messages
                ";":{
                    "skb:lang:target:token:ident":"';'",
                    "skb:lang:target:token:translate":"character ';'"
                },
                "}":{
                    "skb:lang:target:token:ident":"'}'",
                    "skb:lang:target:token:translate":"character '}'"
                },
                "=":{
                    "skb:lang:target:token:ident":"'='",
                    "skb:lang:target:token:translate":"character '='"
                },
                "(":{
                    "skb:lang:target:token:ident":"'('",
                    "skb:lang:target:token:translate":"character '('"
                },
                ":":{
                    "skb:lang:target:token:ident":"':'",
                    "skb:lang:target:token:translate":"character ':'"
                },
                "::":{
                    "skb:lang:target:token:ident":"'::'",
                    "skb:lang:target:token:translate":"scope operator '::'"
                },
                "[":{
                    "skb:lang:target:token:ident":"'['",
                    "skb:lang:target:token:translate":"character '['"
                },
                ",":{
                    "skb:lang:target:token:ident":"','",
                    "skb:lang:target:token:translate":"character ','"
                },
                ")":{
                    "skb:lang:target:token:ident":"')'",
                    "skb:lang:target:token:translate":"character ')'"
                },
                "{":{
                    "skb:lang:target:token:ident":"'{'",
                    "skb:lang:target:token:translate":"character '{'"
                },
                "]":{
                    "skb:lang:target:token:ident":"']'",
                    "skb:lang:target:token:translate":"character ']'"
                }
            },

            "rules":{
            }
        }
    }
}
