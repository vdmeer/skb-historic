/* Copyright (c) 2008-2011 Sven van der Meer
 * All rights reserved.
 *
 * Redistribution  and  use  in  source  and  binary  forms,  with  or  without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     + Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     + Redistributions  in binary  form must  reproduce the  above copyright
 *       notice, this list  of conditions and  the following disclaimer  in the
 *       documentation and/or other materials provided with the distribution.
 *     + Neither the name of the the author nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS  IS"
 * AND ANY EXPRESS  OR IMPLIED WARRANTIES,  INCLUDING, BUT NOT  LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY  AND FITNESS FOR A  PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN  NO EVENT SHALL  THE COPYRIGHT HOLDER  OR CONTRIBUTORS BE
 * LIABLE  FOR  ANY  DIRECT,  INDIRECT,  INCIDENTAL,  SPECIAL,  EXEMPLARY,   OR
 * CONSEQUENTIAL  DAMAGES  (INCLUDING,  BUT  NOT  LIMITED  TO,  PROCUREMENT  OF
 * SUBSTITUTE GOODS  OR SERVICES;  LOSS OF  USE, DATA,  OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER  CAUSED AND  ON ANY  THEORY OF  LIABILITY, WHETHER  IN
 * CONTRACT,  STRICT LIABILITY,  OR TORT  (INCLUDING NEGLIGENCE  OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE  USE OF THIS SOFTWARE, EVEN IF ADVISED  OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * Template file for the target graphml in Org.SKB.Lang.Glue.Proto
 *
 * @package    org.skb.lang.glue.proto
 * @author     Sven van der Meer <sven@vandermeer.de>
 * @copyright  2011-2011 Sven van der Meer
 * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
 * @version    v1.0.0 build 110901 (01-Sep-11) for StringTemplate v3.2.0
 */

group graphml;

mlcomment_start(dummy) ::= "<!--"
mlcomment_end(dummy) ::= "-->"
slcomment(comment) ::= "<!-- $comment$ -->"

glueSpecification(id, body) ::= <<
<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">

  $body$
</graphml>
>>


glueTopology(id, idlang, domains, nodes, connections) ::= <<
<graph id="$if(id)$$id$$elseif(idlang)$$idlang$$endif$" edgedefault="undirected">
  $domains$
  $nodes$
  $connections$
</graph>
>>


glueDomain(id, idlang, domains, nodes, connections, ports, contracts, policies, kvl) ::= <<
<node id="$if(id)$$id$$elseif(idlang)$$idlang$$endif$">
  <graph id="$if(id)$$id$$elseif(idlang)$$idlang$$endif$:" edgedefault="undirected">
    $domains$
    $nodes$
    $connections$
    $ports$
  </graph>
</node>
>>

glueNode(id, idlang, components, connections, ports, contracts, policies, kvl) ::= <<
<node id="$if(id)$$id$$elseif(idlang)$$idlang$$endif$" $if(components)$
>  $\n$  <graph id="$if(id)$$id$$elseif(idlang)$$idlang$$endif$:" edgedefault="undirected">
$elseif(connections)$
>  $\n$  <graph id="$if(id)$$id$$elseif(idlang)$$idlang$$endif$:" edgedefault="undirected">
$elseif(ports)$
>  $\n$  <graph id="$if(id)$$id$$elseif(idlang)$$idlang$$endif$:" edgedefault="undirected">
$else$
/>
$endif$
$if(components)$
    $components$
$endif$
$if(connections)$
    $connections$
$endif$
$if(ports)$
    $ports$
$endif$

$if(components)$
  </graph>
</node>
$elseif(connections)$
  </graph>
</node>
$elseif(ports)$
  </graph>
</node>
$endif$

>>


glueConnection(id, directed, source, target) ::= <<
<edge id="$id$" $source$ $target$ />$\n$
>>

glueSource(id, sourceport) ::= <<
source="$id$" $if(sourceport)$ $sourceport$$endif$
>>

glueTarget(id, targetport) ::= <<
target="$id$" $if(targetport)$ $targetport$$endif$
>>


gluePort(id) ::= <<
<port name="$id$"/>
>>

glueSourcePort(id) ::= <<
sourceport="$id$"
>>

glueTargetPort(id) ::= <<
targetport="$id$"
>>

glueComponent(id, idlang, ports, contracts, policies, kvl) ::= <<
<node id="$if(id)$$id$$elseif(idlang)$$idlang$$endif$" $if(ports)$
>
  $ports$
</node>

$else$
/>
$endif$

>>


const_value(type, val) ::= "$val$"
scoped_name(id, add) ::= <<$id; separator="::"$
>>

scoped_name_lang(sn) ::= <<$sn$
>>
